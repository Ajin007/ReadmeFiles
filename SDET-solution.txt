********************************************************************************************************************************SDET JAVA DATATYPE VARIABL ------- 1
    // You are using Java
import java.util.Scanner;

class DataProcessing{
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);
        int positiveinteger = scanner.nextInt();
        if(positiveinteger < 0){
            System.out.println("Invalid input. Please enter a positive integer.");
        } else {
            // System.out.println(String.format("Byte: %d\nShort: %d\nLong: %d\nFloat: %.1f\nDouble: %.1f", (byte) positiveinteger, (short) positiveinteger, (long) positiveinteger, (float) positiveinteger, (double) positiveinteger));
            // String.format(String, ...args)
            System.out.println(String.format("Byte: %d",(byte)positiveinteger));
            System.out.println(String.format("Short: %d",(short)positiveinteger));
            System.out.println(String.format("Long: %d",(long)positiveinteger));
            System.out.println(String.format("Float: %.1f",(float)positiveinteger));
            System.out.println(String.format("Double %.1f",(double)positiveinteger));
        }
    }
}


// -----------------2
// You are using Java
import java.util.Scanner;

class CurrencyConverter{

    public static void main(String[] args){
        
        Scanner scanner= new Scanner(System.in);
        
        Integer amount=scanner.nextInt();
        float exchangeRate=scanner.nextFloat();
        
        if(amount < 0 || exchangeRate < 0){
             System.out.println("Invalid input. Please enter positive values for amount and exchange rate.");
        }else {
            
        System.out.println(String.format("%.1f",amount*exchangeRate));
        }
        
        
    }
}

---------------------2

// You are using Java
// import java.util.Scanner;

// class TemperatureConverter{
    
//     public static void main(String[] args){
        
//         Scanner scanner=new Scanner(System.in);
        
//       float celcius= scanner.nextFloat();
       
//       double fahrenheit= (celcius * 9.0 / 5) + 32;
       
//       System.out.printf("%.1f\n", fahrenheit);
       
//       scanner.close();
       
//     }
// }
import java.util.Scanner;
import java.lang.StringBuilder;
import java.util.Formatter;

class TemperatureConverter{
    
    public static void main(String[] args){
        
        StringBuilder builder=new StringBuilder();
        
        Formatter formatter= new Formatter(builder);
        
        
        
        Scanner scanner=new Scanner(System.in);
        
       float celcius= scanner.nextFloat();
       
       double fahrenheit= (celcius * 9.0 / 5) + 32;
       
    //   System.out.printf("%.1f\n", fahrenheit);
    
    formatter.format("%.1f\n", fahrenheit);
    
    System.out.println(builder.toString());
       
       scanner.close();
       
    }
}

---------------------3 

import java.util.Scanner;

class TemperatureConverter{
    
    public static void main(String[] args){
        
        Scanner scanner=new Scanner(System.in);
        
      double celcius= scanner.nextDouble();
      
      double fahrenheit= (celcius * 9.0 / 5) + 32;
       
      System.out.printf("%.2f\n", fahrenheit);
       
      scanner.close();
       
    }
}
// import java.util.Scanner;
// import java.lang.StringBuilder;
// import java.util.Formatter;

// class TemperatureConverter{
    
//     public static void main(String[] args){
        
//         StringBuilder builder=new StringBuilder();
        
//         Formatter formatter= new Formatter(builder);
        
        
        
//         Scanner scanner=new Scanner(System.in);
        
//       float celcius= scanner.nextFloat();
       
//       double fahrenheit= (celcius * 9.0 / 5) + 32;
       
//     //   System.out.printf("%.1f\n", fahrenheit);
    
//     formatter.format("%.1f\n", fahrenheit);
    
//     System.out.println(builder.toString());
       
//       scanner.close();
       
//     }
// }



*************************************************************Scanner class Problems*********************************************

1)))))))))))))))))))
import java.util.Scanner;


class Main {
    
    public static void main(String[] args){
        
        Scanner scanner= new Scanner(System.in);
        
    float side=scanner.nextFloat();
        
        float perimeter = 4 * side;
        
        System.out.println(perimeter);
        
        
         
    }
}


2))))))))))))))))))))))
import java.util.Scanner;


class Main {
    
    public static void main(String[] args){
        
        Scanner scanner=new Scanner(System.in);
        
        String name=scanner.nextLine();
        String email=scanner.nextLine();
        String username=scanner.nextLine();
        String password=scanner.nextLine();
        
        if(name.isEmpty() || email.isEmpty() || username.isEmpty() | password.isEmpty()){
            System.out.println("Invalid input. Please make sure all fields are non-empty.");
        }else{
            
        System.out.println("User Registration Successful!");
        System.out.println(String.format("Name: %s\nEmail: %s\nUsername: %s\nPassword: %s\n",name,email,username,password));
        }
        
        
    }
    
}


3)))))))))))))))))))))))))))))


import java.util.Scanner;


// class PersonalTracker {
    
//     public static void main(String[] args){
        
//         Scanner scanner=new Scanner(System.in);
//         String name=scanner.nextLine();
        
//         Integer age=scanner.nextInt();
//         scanner.nextLine();
//         // char gender=scanner.nextLine().charAt(0);
//         String gender=scanner.nextLine();
//         String occupation=scanner.nextLine();
        
//         System.out.println(String.format("Name: %s\nAge: %d\nGender: %s\nOccupation: %s\n",name,age,gender,occupation));
        
        
        
//     }
// }


class PersonalInfoTracker{
    private String name;
    private int age;
    private String gender;
    private String occupation;
    private boolean isValid=true;
    
    public String displayName(Scanner scanner){
        
        return  this.name=scanner.nextLine();
        
    }
    
    //user age should be a positive integer
    public Integer displayAge(Scanner scanner){
        
        while(true){
            
        
            try{
                //this is another way of parsing the data 
                int age=Integer.parseInt(scanner.nextLine());
                    
                if(age <= 0){
                    this.isValid=false;
                    return age;
                    
                    
                }else {
                     this.age=age;
                     return age;
                    
                }
                
            }catch(NumberFormatException e){
                
                System.out.println("Invalid Input. Please enter a valid input for age.");
            }
        }
    }
    
    public boolean isValid(){
        return this.isValid;
    }
    
    public String displayGender(Scanner scanner){
        
        while(true){
            
            String input=scanner.nextLine();
            
            // if(input.length() != 1 ){
            //     System.out.println("Invalid input");
            // }
            
            
            if(input.equals("M") || input.equals("F")){
                
            switch (input){
                
                case "F":
                    this.gender = "Female";
                    return gender;
                case "M":
                    this.gender="Male";
                    return gender;
             
                
            }
            }else{
                this.isValid=false;
                return gender;
            }
        }
        
    }
    
    public String displayOccupation(Scanner scanner){
        String input=scanner.nextLine();
        if(input == null || input.isEmpty()){
            
            this.isValid=false;
            return occupation;
            
        }else {
             this.occupation=input;
        }
            
        return occupation;
        
    }
    
    public void displayAll(){

       
        
        System.out.println("Name: "+name);
        System.out.println("Age: "+age);
        System.out.println("Gender: "+gender);
        System.out.println("Occupation: "+occupation);
        
    }
    
  
    
    
}

class Main {
    
    public static void main(String[] args){
        
        Scanner scanner= new Scanner(System.in);
        
        PersonalInfoTracker personal=new PersonalInfoTracker();
        
        personal.displayName(scanner);
        personal.displayAge(scanner);
        personal.displayGender(scanner);
        personal.displayOccupation(scanner);
        if(!personal.isValid()){
            System.out.println("Invalid input");
        }else{
            
        personal.displayAll();
        }
        
        
        scanner.close();
        
    }
}
**********************************Conditional one ******************************************
import java.util.Scanner;
class ReverseInteger{
    
    public Integer reverseInteger(Integer inputData){
        int reversed=0;
        do{
            
            int digit=inputData % 10;
            reversed=reversed*10+digit;
            inputData=inputData/10;        }while(inputData > 0);
        return reversed;
    }
}
class Main{
    public static void main(String[] args){
        Scanner scanner= new Scanner(System.in);
        ReverseInteger reverse=new ReverseInteger();
        Integer inputData=scanner.nextInt();
        if(inputData < 0){
            System.out.println("Should be a non negative number");
        }else{
            
        System.out.println(reverse.reverseInteger(inputData));
        }
    }
}

2))))))))))))))))))))))))))))
import java.util.Scanner;

class NaturalNumbers{
    public Integer sumOfNaturalNumbers(Integer N){
        int sum=0;
        int counter=N;// working on with the Nth copy
        while(counter>0){
            sum += counter;
            counter --;
        }
        return sum;
        // short methods is N(N+1)/2-----> this is the formula for the same.
    }
}
class Main{
    public static void main(String[] args){
        Scanner scanner=new Scanner(System.in);
        Integer data=scanner.nextInt();
        NaturalNumbers naturalNumber=new NaturalNumbers();
        if(data < 0){
       System.out.println("N must be a positive integer.");
        }else {
       System.out.println( naturalNumber.sumOfNaturalNumbers(data));
        }
    }
}

3)))))))))))))))))))))))))))))))))))))))))))))
import java.util.Scanner;

class WeatherForecast{
    
    public void displayForecast(Integer celcius,String weather){
        if(weather.equalsIgnoreCase("sunny")){
            if(celcius >  30){
                
            System.out.println("Hot and Sunny");
            }
        else if(celcius >=20 ){
            System.out.println("Warm and Sunny");}
            
        else if(celcius < 20 ){
            System.out.println("Cool and Sunny");
        }
        }
        else if (weather.equalsIgnoreCase("cloudy")){
            System.out.println("Cloudy with chances of rain");
            
        }else if (weather.equalsIgnoreCase("rainy")){
            
            System.out.println("Rainy with thunderstorms");
        }
            }
}
class Main{
    
    public static void main(String[] args){
        Scanner scanner=new Scanner(System.in);
        Integer celcius=Integer.parseInt(scanner.nextLine());
       String weather= scanner.nextLine().trim();
        WeatherForecast weatherforecast=new WeatherForecast();
        if(celcius > 0 && !weather.isEmpty()){
        weatherforecast.displayForecast(celcius,weather);
        }
        scanner.close();
    }
}

*********************************************************************************************Scanner*************************************************************

1)))))))))))))))))))))))
import java.util.Scanner;
class Main{
    public static int sumOfArray(int[] arrayOfData){
        int finalSum=0;
        for(int i=0;i<arrayOfData.length;i++){
            finalSum = finalSum+arrayOfData[i];
        }
        return finalSum;
    }
public static void main(String[] args){
    Scanner scanner= new Scanner(System.in);
    Integer arraySize=Integer.parseInt(scanner.nextLine());
    int[] array=new int[arraySize];
    for(int i=0;i<arraySize;i++){
    array[i]=scanner.nextInt();
    }
    int finalAnswer=sumOfArray(array);
    System.out.println("The sum of the array elements is: "+finalAnswer);
}    
}


2))))))))))))))))))))))))))))))))))
import java.util.Scanner;
import java.util.Arrays;

class Concationation{
    
    // method-1 
    public static void concatenateArrays(int[] dataSizeone,int[] dataSizetwo){

//System.arrayCopy() is the best way of copying the arrayCopy
//Arrays.copyOf() is another method, but deep inside this too using the System.arrayCopy();

//Allocate new array with the combined length
int[] finalValue=new int[dataSizeone.length+dataSizetwo.length];

// another way of creating a new array
//finalValue=Arrays.copyOf(targetArray,final index value of the target value+sourcearray.length)
// this shall be achieved by using the StringBuilder class in the java

for(int i=0;i<dataSizeone.length;i++){
    finalValue[i]=dataSizeone[i];
}

for(int i=0;i<dataSizetwo.length;i++){
    finalValue[i+dataSizeone.length]=dataSizetwo[i];
}
// System.out.println(Arrays.toString(finalValue));

for(int i=0;i<finalValue.length;i++){
    System.out.print(finalValue[i]);
    if(i < finalValue.length - 1){
        System.out.print(" ");
    }
}
}
 
     
    //method-2
     public static void main(String[] args){
         Scanner scanner=new Scanner(System.in);
         int sizeOfArrayOne=Integer.parseInt(scanner.nextLine());
         int[] dataArrayOne=new int[sizeOfArrayOne];
         for(int i=0;i<sizeOfArrayOne;i++){
dataArrayOne[i]=scanner.nextInt();
}
scanner.nextLine();
         int sizeOfSecondArray=Integer.parseInt(scanner.nextLine());
        int[] dataSecondArray=new int[sizeOfSecondArray];
        for(int j=0;j<sizeOfSecondArray;j++){
     dataSecondArray[j]=scanner.nextInt();
 }  
         concatenateArrays(dataArrayOne,dataSecondArray);
         
         
     }
    
    
}



3))))))))))))))))))))))))))))))))))))))))))))))))))))
import java.util.Scanner;
import java.util.Arrays;

class Main{
    
    public static void main(String[] args){
        
        Scanner scanner = new Scanner(System.in);
        int rows=scanner.nextInt();
        int cols=scanner.nextInt();
        
        //initialize a Array
        int[][] array=new int[rows][cols];
        
        for(int i=0;i<rows;i++){
            for(int j=0;j<cols;j++){
               array [i][j]=scanner.nextInt();
            }
        }
        
        int sum =0;
         for(int i=0;i<rows;i++){
            for(int j=0;j<cols;j++){
               sum += array[i][j];
            }
        }
        
        // since arrays.toString does not support the 2D, we are using arrays.deepToString()
        // System.out.print(Arrays.deepToString(array));
        System.out.print(sum);
    }
}


**********************************************Arrsy,buuble sort, linear search algorithm *********************

1)))))))))))))))))))))))))))))))))))))))))----> sort for the integer
import java.util.Scanner;
import java.util.Arrays;

class SortArray{
    public static void main(String[] args){
        Scanner scanner=new Scanner(System.in);
            int arraySize=Integer.parseInt(scanner.nextLine());
            int[] arrayData= new int[arraySize];
            for(int i=0;i<arraySize;i++){
               arrayData[i]=scanner.nextInt();
            }
            // bubble sort algorithm
            for(int i=0;i<arraySize-1;i++){
                for(int j=0;j<arraySize-i-1;j++){
                    if(arrayData[j]>arrayData[j+1]){
                        //swapping done here
                        int tmp=arrayData[j];
                        arrayData[j]=arrayData[j+1];
                        arrayData[j+1]=tmp;
                    }
                }
            }
            
            //to print like the exact ouput
            for(int i=0;i<arrayData.length;i++){
                System.out.print(arrayData[i]);
                System.out.print(" ");
            
            }
            
            // System.out.println(Arrays.toString(arrayData));
           
    }
}


2))))))))))))))))))))))) ---> sort for the string
import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

class Main{
    
    public static void main(String[] args){
        Scanner scanner= new Scanner(System.in);
        int size=Integer.parseInt(scanner.nextLine());
        String[] fruits=new String[size];
        for(int i=0; i<size;i++){
            fruits[i]= scanner.nextLine();
        }
        // bubble sort
        // buuble sort in the strings is done by the compareTo method , which will give the 
        for(int i=0;i<fruits.length-1;i++){
            for(int j=0;j<fruits.length -i -1;j++){
                if((fruits[j].compareTo(fruits[j+1])) > 0){
                    String tmp=fruits[j];
                    fruits[j]=fruits[j+1];
                    fruits[j+1]=tmp;
                }
            }
        }
        // this is using the inbuilt method of array
        // Arrays.sort(fruits);
        
        // this is using the inbuild method of the collections
        // List<String> listData=Arrays.asList(fruits);
        // Collections.sort(listData);
        
        for(int i=0;i<fruits.length;i++){
            System.out.println(fruits[i]);
        }
    //   for(String str:listData){
    //       System.out.println(str);
    //   }
        
        // System.out.println(Arrays.toString(fruits));
        
    }
}

3)))))))))))))))))))))) ->>>>>> linear search algorithm
import java.util.Scanner;
import java.util.Arrays;

class Main{
    
    // for this method we shall also use the sorted binary search
    //which is available in the  Arrays class.
    
    public static void main(String[] args){
        
        Scanner scanner =new Scanner(System.in);
        String dynamicData=scanner.nextLine();
        char searchData=scanner.nextLine().charAt(0);
        
        char[] charArray=new char[dynamicData.length()];
        
        //boolean usage to get the false statement
        boolean found=false;
        
        for(int i=0;i<charArray.length;i++){
            charArray[i]=dynamicData.charAt(i);
        }
        
        for(int i =0;i<charArray.length;i++){
            if(charArray[i] == searchData){
                System.out.println("Found at index "+ i);
                found =true;
                break;
            }
        }
        
        if(!found){
            System.out.println("Not found");
        }
        
        // System.out.println(Arrays.toString(charArray));
        
        
        
    }
}

************************************************************String BUilder, Anagram*************************

1))))))))))))))))))))))))-----> ANagram
Steps to Check if Two Strings are Anagrams:
Length Check: If the two strings don't have the same length, they can't be anagrams.

Sorting: Sort both strings and compare them. If they are anagrams, they will be identical after sorting.

Frequency Count: Alternatively, we could count the frequency of each character in both strings and compare those counts.

import java.util.Scanner;
import java.util.Arrays;


class Main{
    
    public static void main(String[] args){
        
        // here for the anagatram we did only two checks we also shall do another frequency heck asw ell
        
        Scanner scanner=new Scanner(System.in);
        String S1=scanner.nextLine();
    
        String S2=scanner.nextLine();
        
        if(S1.length() != S2.length()){
            System.out.println("Not Anagrams");
            return;
        }
        
        char[] array1= S1.toCharArray();
        char[] array2= S2.toCharArray();
        
        Arrays.sort(array1);
        Arrays.sort(array2);
        
        // to check if the sorted arrays are equal
        if(Arrays.equals(array1,array2)){
            System.out.println("Anagrams");
            
        }else{
            
            System.out.println("Not Anagrams");
        }
        
        
        // convert the string to the char Arrays 
        
        
        
        
        
       
        
        
        
        
        
        
        // System.out.println(Arrays.toString(charString));
    }
}

2))))))))))))))))))))))))))---> 
import java.util.Scanner;
import java.util.Arrays;

class Main{
    
    // character class used to convert the toUpeerclass and the toLowerclass
    
    public static void main(String[] args){
        Scanner scanner= new Scanner(System.in);
        String dataString=scanner.nextLine();
        
        // convert string to Character
        char[] charArray=dataString.toCharArray();
        for(int i =0;i<charArray.length;i++){
        //  if(i % 2 == 0){
        //     charArray[i]=Character.toLowerCase(charArray[i]);
        //  }else{
        //     charArray[i]=Character.toUpperCase(charArray[i]);
            
        // }
        
        if(i % 2 == 0){
            if(charArray[i] >='A' && charArray[i] <='Z'){
                charArray[i]=(char)(charArray[i] +32);  // convert to the lower case
            }else if(charArray[i] >='a' && charArray[i] <='z'){
                charArray[i]=(char)(charArray[i] -32);  // convert to the lower case
                
            }
            
        }
        
        }
        
       //output modified string
       System.out.println(new String(charArray));
        
    }
}

3)))))))))))))))))))) ---> 

import java.util.Scanner;
import java.lang.StringBuilder;


class Main{
    
    public static void main(String[] args){
        
        Scanner scanner=new Scanner(System.in);
        String reverseInput=scanner.nextLine();
        String[] stringArray=reverseInput.split(" ");;
        for(int i=stringArray.length-1;i>=0;i--){
            System.out.print(stringArray[i]);
            System.out.print(" ");
            
        }
        // same using the StringBuilder
        // StringBuilder reversedSeentence=new StringBuilder();
        
        // for(int i=stringArray.length-1;i>=0;i--){
            
        //     reversedSeentence.append(stringArray[i]);
        //     if(i> 0){
        //         reversedSeentence.append(" ");
        //     }
        // }
        
        // System.out.println(reversedSeentence.toString());
    }
}


